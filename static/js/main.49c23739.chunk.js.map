{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","_ref","flashcard","_useState","useState","_useState2","Object","slicedToArray","flip","setFlip","_useState3","_useState4","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","react_default","a","createElement","className","concat","style","onClick","ref","map","option","key","FlashcardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","innerHTML","value","axios","get","then","res","data","trivia_categories","Fragment","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","toConsumableArray","incorrect_answers","Date","now","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.49c23739.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nexport default function Flashcard({ flashcard }) {\n    const [flip, setFlip] = useState(false)\n    const [height, setHeight] = useState('initial')\n\n    const frontEl = useRef()\n    const backEl = useRef()\n\n    function setMaxHeight() {\n        const frontHeight = frontEl.current.getBoundingClientRect().height;\n        const backHeight = backEl.current.getBoundingClientRect().height;\n        setHeight(Math.max(frontHeight, backHeight, 100))\n    }\n\n    useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options])\n    useEffect(() => {\n        window.addEventListener('resize', setMaxHeight);\n        return () => window.removeEventListener('resize', setMaxHeight)\n    }, [])\n\n    return (\n        <div\n            className={`card ${flip ? 'flip' : ''}`}\n            style={{ height: height }}\n            onClick={() => setFlip(!flip)}\n        >\n\n            <div className=\"front\" ref={frontEl}>\n                {flashcard.question}\n                <div className=\"flashcard-options\">\n                    {flashcard.options.map(option => {\n                        return <div className=\"flashcard-option\" key={option}>\n                            {option}\n                        </div>\n                    })}\n                </div>\n            </div>\n\n            <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\n\n            {/* {flip ? flashcard.answer : flashcard.question} */}\n        </div>\n    )\n}\n","import React from 'react'\nimport Flashcard from './Flashcard'\n\nexport default function FlashcardList({ flashcards }) {\n    return (\n        <div className=\"card-grid\">\n            {flashcards.map(flashcard => {\n                return <Flashcard flashcard={flashcard} key={flashcard.id} />\n            })}\n        </div>\n    )\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList'\nimport './app.css'\nimport axios from 'axios'\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([])\n  const [categories, setCategories] = useState([])\n\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n  useEffect(() => {\n    axios\n      .get('https://opentdb.com/api_category.php')\n      .then(res => {\n        setCategories(res.data.trivia_categories)\n      })\n  }, [])\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    })\n      .then(res => {\n        setFlashcards(res.data.results.map((questionItem, index) => {\n          const answer = decodeString(questionItem.correct_answer)\n          const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer]\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem.question),\n            answer: decodeString(questionItem.correct_answer),\n            options: options.sort(() => Math.random() - .5)\n          }\n        }))\n      })\n  }\n\n  return (\n    <>\n      <form className=\"header\" onSubmit={handleSubmit}>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"category\"> Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories.map(category => {\n              return <option value={category.id} key={category.id}>{category.name}</option>\n            })}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Questions</label>\n          <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl}></input>\n        </div>\n\n        <div className=\"form-group\">\n          <button className=\"btn\">\n            Generate\n          </button>\n        </div>\n\n      </form>\n\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div >\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}